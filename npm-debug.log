0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   '-g',
1 verbose cli   'contextify' ]
2 info using npm@1.1.59
3 info using node@v0.8.8
4 verbose node symlink C:\Program Files\nodejs\\node.exe
5 verbose read json C:\Documents and Settings\michaelse\Application Data\npm\package.json
6 verbose read json C:\Documents and Settings\michaelse\Application Data\npm\package.json
7 verbose cache add [ 'contextify', null ]
8 silly cache add name=undefined spec="contextify" args=["contextify",null]
9 verbose parsed url { pathname: 'contextify',
9 verbose parsed url   path: 'contextify',
9 verbose parsed url   href: 'contextify' }
10 silly lockFile e90e8b6a-contextify contextify
11 verbose lock contextify C:\Documents and Settings\michaelse\Application Data\npm-cache\e90e8b6a-contextify.lock
12 silly lockFile e90e8b6a-contextify contextify
13 verbose addNamed [ 'contextify', '' ]
14 verbose addNamed [ null, '' ]
15 silly lockFile 902bbeb2-contextify contextify@
16 verbose lock contextify@ C:\Documents and Settings\michaelse\Application Data\npm-cache\902bbeb2-contextify.lock
17 silly addNameRange { name: 'contextify', range: '', hasData: false }
18 verbose url raw contextify
19 verbose url resolving [ 'https://registry.npmjs.org/', './contextify' ]
20 verbose url resolved https://registry.npmjs.org/contextify
21 info retry registry request attempt 1 at 21:44:45
22 verbose etag "15CJS77PN2YA7C2MBWFHPJEEM"
23 http GET https://registry.npmjs.org/contextify
24 http 304 https://registry.npmjs.org/contextify
25 silly registry.get cb [ 304,
25 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
25 silly registry.get     etag: '"15CJS77PN2YA7C2MBWFHPJEEM"',
25 silly registry.get     date: 'Thu, 23 Aug 2012 18:44:47 GMT',
25 silly registry.get     'content-length': '0' } ]
26 verbose etag contextify from cache
27 silly addNameRange number 2 { name: 'contextify', range: '', hasData: true }
28 silly addNameRange versions [ 'contextify',
28 silly addNameRange   [ '0.0.2',
28 silly addNameRange     '0.0.3',
28 silly addNameRange     '0.0.4',
28 silly addNameRange     '0.0.5',
28 silly addNameRange     '0.0.6',
28 silly addNameRange     '0.0.7',
28 silly addNameRange     '0.1.0',
28 silly addNameRange     '0.1.1',
28 silly addNameRange     '0.1.2',
28 silly addNameRange     '0.1.3' ] ]
29 verbose addNamed [ 'contextify', '0.1.3' ]
30 verbose addNamed [ '0.1.3', '0.1.3' ]
31 silly lockFile 7770d4b3-contextify-0-1-3 contextify@0.1.3
32 verbose lock contextify@0.1.3 C:\Documents and Settings\michaelse\Application Data\npm-cache\7770d4b3-contextify-0-1-3.lock
33 verbose read json C:\Documents and Settings\michaelse\Application Data\npm-cache\contextify\0.1.3\package\package.json
34 silly lockFile 7770d4b3-contextify-0-1-3 contextify@0.1.3
35 silly lockFile 902bbeb2-contextify contextify@
36 silly resolved [ { name: 'contextify',
36 silly resolved     version: '0.1.3',
36 silly resolved     description: 'Turn an object into a persistent execution context.',
36 silly resolved     author: { name: 'Brian McDaniel', email: 'brianmcd05@gmail.com' },
36 silly resolved     contributors: [ [Object] ],
36 silly resolved     keywords: [ 'context', 'vm' ],
36 silly resolved     repository:
36 silly resolved      { type: 'git',
36 silly resolved        url: 'https://github.com/brianmcd/contextify.git' },
36 silly resolved     main: './lib/contextify',
36 silly resolved     scripts: { test: 'nodeunit test/', install: 'node-gyp rebuild' },
36 silly resolved     engines: { node: '>=0.4.0' },
36 silly resolved     licenses: [ [Object] ],
36 silly resolved     dependencies: { bindings: '*' },
36 silly resolved     devDependencies: { nodeunit: '>=0.5.x' },
36 silly resolved     gypfile: true,
36 silly resolved     readme: '# Contextify\n\nTurn an object into a V8 execution context.  A contextified object acts as the global \'this\' when executing scripts in its context.  Contextify adds 3 methods to the contextified object: run(code, filename), getGlobal(), and dispose().  The main difference between Contextify and Node\'s vm methods is that Contextify allows asynchronous functions to continue executing in the Contextified object\'s context.  See vm vs. Contextify below for more discussion.\n\n## Examples\n```javascript\nvar Contextify = require(\'contextify\');\nvar sandbox = { console : console, prop1 : \'prop1\'};\nContextify(sandbox);\nsandbox.run(\'console.log(prop1);\');\nsandbox.dispose(); // free the resources allocated for the context.\n```\n\n```javascript\nvar sandbox = Contextify(); // returns an empty contextified object.\nsandbox.run(\'var x = 3;\');\nconsole.log(sandbox.x); // prints 3\nsandbox.dispose();\n```\n\n```javascript\nvar sandbox = Contextify({setTimeout : setTimeout});\nsandbox.run("setTimeout(function () { x = 3; }, 5);");\nconsole.log(sandbox.x); // prints undefined\nsetTimeout(function () {\n    console.log(sandbox.x); // prints 3\n    sandbox.dispose();\n}, 10);\n```\n## Details\n\n**Contextify([sandbox])**\n\n    sandbox - The object to contextify, which will be modified as described below\n              If no sandbox is specified, an empty object will be allocated and used instead.\n\n    Returns the contextified object.  It doesn\'t make a copy, so if you already have a reference\n    to the sandbox, you don\'t need to catch the return value.\n\nA Contextified object has 2 methods added to it:\n\n**run(code, [filename])**\n\n    code - string containing JavaScript to execute\n    filename  - an optional filename for debugging.\n\n    Runs the code in the Contextified object\'s context.\n\n**getGlobal()**\n\nReturns the actual global object for the V8 context.  The global object is initialized with interceptors (discussed below) which forward accesses on it to the contextified object.  This means the contextified object acts like the global object in most cases.  Sometimes, though, you need to make a reference to the actual global object.\n\nFor example:\n\n```javascript\nvar window = Contextify({console : console});\nwindow.window = window;\nwindow.run("console.log(window === this);");\n// prints false.\n```\n\n```javascript\nvar window = Contextify({console : console});\nwindow.window = window.getGlobal();\nwindow.run("console.log(window === this);");\n// prints true\n```\n\nThe global object returned by getGlobal() can be treated like the contextified sandbox object, except that defining getters/setters will not work on it.  Define getters and setters on the actual sandbox object instead.\n\n**dispose()**\n\nFrees the memory allocated for the underlying V8 context.  If you don\'t call this when you\'re done, the V8 context memory will leak, as will the sandbox memory, since the context\'s global stores a strong reference to the sandbox object.  You can still use your sandbox object after calling dispose(), but it\'s unsafe to use a global previously returned from getGlobal().  run, getGlobal, and dispose will be removed from the sandbox object.\n\n## Install\n\n    npm install contextify\n\n## require(\'vm\') vs. Contextify\n\nNode\'s vm functions (runInContext etc) work by copying the values from the sandbox object onto a context\'s global object, executing the passed in script, then copying the results back.  This means that scripts that create asynchronous functions (using mechanisms like setTimeout) won\'t have see the results of executing those functions, since the copying in/out only occurs during an explicit call to runInContext and friends.  \n\nContextify creates a V8 context, and uses interceptors (see: http://code.google.com/apis/v8/embed.html#interceptors) to forward global object accesses to the sandbox object.  This means there is no copying in or out, so asynchronous functions have the expected effect on the sandbox object.  \n\n## Tests\n\nTesting is done with nodeunit.  Run the tests with\n\n    nodeunit test/\n\nOutput: \n\n    OK: 92 assertions (27ms)\n\n\n## Building\n\n    node-waf configure build\n\n## Acknowledgments\n\nInspiration taken from Assaf\'s Zombie.js context solution: https://github.com/assaf/zombie\n',
36 silly resolved     _id: 'contextify@0.1.3',
36 silly resolved     _from: 'contextify' } ]
37 info install contextify@0.1.3 into C:\Documents and Settings\michaelse\Application Data\npm
38 info installOne contextify@0.1.3
39 verbose from cache C:\Documents and Settings\michaelse\Application Data\npm-cache\contextify\0.1.3\package\package.json
40 info C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify unbuild
41 verbose read json C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\package.json
42 verbose tar unpack C:\Documents and Settings\michaelse\Application Data\npm-cache\contextify\0.1.3\package.tgz
43 silly lockFile b2774a47-Data-npm-node-modules-contextify C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify
44 verbose lock C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify C:\Documents and Settings\michaelse\Application Data\npm-cache\b2774a47-Data-npm-node-modules-contextify.lock
45 silly gunzTarPerm modes [ '777', '666' ]
46 silly gunzTarPerm extractEntry package.json
47 silly gunzTarPerm extractEntry .npmignore
48 silly gunzTarPerm extractEntry README.md
49 silly gunzTarPerm extractEntry binding.gyp
50 silly gunzTarPerm extractEntry changelog
51 silly gunzTarPerm extractEntry lib/contextify.js
52 silly gunzTarPerm extractEntry LICENSE.txt
53 silly gunzTarPerm extractEntry src/contextify.cc
54 silly gunzTarPerm extractEntry test/contextify.js
55 silly gunzTarPerm extractEntry wscript
56 verbose read json C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\package.json
57 silly lockFile b2774a47-Data-npm-node-modules-contextify C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify
58 info preinstall contextify@0.1.3
59 verbose from cache C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\package.json
60 verbose readDependencies using package.json deps
61 verbose from cache C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\package.json
62 verbose readDependencies using package.json deps
63 verbose cache add [ 'bindings@*', null ]
64 silly cache add name=undefined spec="bindings@*" args=["bindings@*",null]
65 verbose parsed url { pathname: 'bindings@*',
65 verbose parsed url   path: 'bindings@*',
65 verbose parsed url   href: 'bindings@*' }
66 silly cache add name="bindings" spec="*" args=["bindings","*"]
67 verbose parsed url { pathname: '*', path: '*', href: '*' }
68 verbose addNamed [ 'bindings', '*' ]
69 verbose addNamed [ null, '' ]
70 silly lockFile a3858fc2-bindings bindings@*
71 verbose lock bindings@* C:\Documents and Settings\michaelse\Application Data\npm-cache\a3858fc2-bindings.lock
72 silly addNameRange { name: 'bindings', range: '', hasData: false }
73 verbose url raw bindings
74 verbose url resolving [ 'https://registry.npmjs.org/', './bindings' ]
75 verbose url resolved https://registry.npmjs.org/bindings
76 info retry registry request attempt 1 at 21:44:48
77 verbose etag "EHS1CUGYZDC6HQ18BGFU3GTJT"
78 http GET https://registry.npmjs.org/bindings
79 http 304 https://registry.npmjs.org/bindings
80 silly registry.get cb [ 304,
80 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
80 silly registry.get     etag: '"EHS1CUGYZDC6HQ18BGFU3GTJT"',
80 silly registry.get     date: 'Thu, 23 Aug 2012 18:44:49 GMT',
80 silly registry.get     'content-length': '0' } ]
81 verbose etag bindings from cache
82 silly addNameRange number 2 { name: 'bindings', range: '', hasData: true }
83 silly addNameRange versions [ 'bindings',
83 silly addNameRange   [ '0.0.1',
83 silly addNameRange     '0.1.0',
83 silly addNameRange     '0.1.1',
83 silly addNameRange     '0.2.0',
83 silly addNameRange     '0.2.1',
83 silly addNameRange     '0.2.2',
83 silly addNameRange     '0.2.3',
83 silly addNameRange     '0.2.4',
83 silly addNameRange     '0.3.0',
83 silly addNameRange     '0.4.0',
83 silly addNameRange     '1.0.0' ] ]
84 verbose addNamed [ 'bindings', '1.0.0' ]
85 verbose addNamed [ '1.0.0', '1.0.0' ]
86 silly lockFile f01e5454-bindings-1-0-0 bindings@1.0.0
87 verbose lock bindings@1.0.0 C:\Documents and Settings\michaelse\Application Data\npm-cache\f01e5454-bindings-1-0-0.lock
88 verbose read json C:\Documents and Settings\michaelse\Application Data\npm-cache\bindings\1.0.0\package\package.json
89 silly lockFile f01e5454-bindings-1-0-0 bindings@1.0.0
90 silly lockFile a3858fc2-bindings bindings@*
91 silly resolved [ { name: 'bindings',
91 silly resolved     description: 'Helper module for loading your native module\'s bindings',
91 silly resolved     keywords: [ 'native', 'addon', 'bindings', 'gyp', 'waf' ],
91 silly resolved     version: '1.0.0',
91 silly resolved     author:
91 silly resolved      { name: 'Nathan Rajlich',
91 silly resolved        email: 'nathan@tootallnate.net',
91 silly resolved        url: 'http://tootallnate.net' },
91 silly resolved     repository:
91 silly resolved      { type: 'git',
91 silly resolved        url: 'git://github.com/TooTallNate/node-bindings.git' },
91 silly resolved     main: './bindings.js',
91 silly resolved     engines: { node: '*' },
91 silly resolved     readme: 'node-bindings\n=============\n### Helper module for loading your native module\'s bindings\n\nThis is a helper module for authors of Node.js native addon modules. In node >=\n0.7.0, it is encouraged to statically precompile your native addons for your\nvarious supported platforms and architectures, rather than depend on your users\nto do that. This adds two new burdens on the developer that we now need to\nconsider while writing our module:\n\n 1. You now have to compile the bindings yourself, before publishing the module.\n 2. You now have to figure out which version of the bindings to load at runtime.\n\n`node-bindings` attempts to solve probelm `#2`.\n\nThis module solves the organizational problem of how to store these bindings\nfiles with a simple directory convention:\n\n```\n<module_root>/compiled/<node_version>/<platform>/<arch>/bindings.node\n```\n\nSo for example, on a 32-bit Windows platform, running node `v0.6.9`, the\n`bindings.node` file should be placed in:\n\n```\n<module_root>/compiled/0.6/win32/ia32/bindings.node\n```\n\nOn 64-bit Mac OS X, running node `v0.7.1`, then the bindings file should be\nplaced in:\n\n```\n<module_root>/compiled/0.7/darwin/x64/bindings.node\n```\n\nFor reference, the calculations for the various parts that makes up the require\npath are:\n\n * `<module_root>` - The directory where `package.json` is found is the root.\n * `<platform>` - `process.platform`\n * `<arch>` - `process.arch`\n * `<node_version>` - `parseFloat(process.versions.node)`\n\nThe default "compiled" directory is `compiled` and the default name of every\n"bindings" file is `bindings.node`. This is configurable if you\'d like.\n\n\nInstallation\n------------\n\nInstall with `npm`:\n\n``` bash\n$ npm install bindings\n```\n\n\nExample\n-------\n\n`require()`ing the proper bindings file for the current node version, platform\nand architecture is as simple as:\n\n``` js\nvar bindings = require(\'bindings\')()\n\n// Use your bindings defined in your C files\nbindings.your_c_function()\n```\n\nYou can specify the name of the bindings file if you desire:\n\n``` js\nvar bindings = require(\'bindings\')(\'my_bindings\')\n```\n\nOr you can pass in an options Object for full configuration:\n\n\n``` js\nvar bindings = require(\'bindings\')({\n    bindings: \'my_bindings\'\n  , compiled: \'builddir\'\n})\n```\n\nNice Error Output\n-----------------\n\n```\nError: Could not load the bindings file. Tried:\n -> /Users/nrajlich/node-ffi/out/Debug/ffi_bindings.node\n -> /Users/nrajlich/node-ffi/Debug/ffi_bindings.node\n -> /Users/nrajlich/node-ffi/out/Release/ffi_bindings.node\n -> /Users/nrajlich/node-ffi/Release/ffi_bindings.node\n -> /Users/nrajlich/node-ffi/compiled/0.6/darwin/x64/ffi_bindings.node\n -> /Users/nrajlich/node-ffi/build/Release/ffi_bindings.node\n -> /Users/nrajlich/node-ffi/build/default/ffi_bindings.node\n    at bindings (/Users/nrajlich/node-ffi/node_modules/bindings/bindings.js:80:13)\n    at Object.<anonymous> (/Users/nrajlich/node-ffi/lib/ffi.js:3:34)\n    at Module._compile (module.js:441:26)\n    at Object..js (module.js:459:10)\n    at Module.load (module.js:348:31)\n    at Function._load (module.js:308:12)\n    ...\n```\n\nLicense\n-------\n\n(The MIT License)\n\nCopyright (c) 2012 Nathan Rajlich &lt;nathan@tootallnate.net&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\'Software\'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n',
91 silly resolved     _id: 'bindings@1.0.0',
91 silly resolved     _from: 'bindings@*' } ]
92 info install bindings@1.0.0 into C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify
93 info installOne bindings@1.0.0
94 verbose from cache C:\Documents and Settings\michaelse\Application Data\npm-cache\bindings\1.0.0\package\package.json
95 info C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings unbuild
96 verbose read json C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings\package.json
97 verbose tar unpack C:\Documents and Settings\michaelse\Application Data\npm-cache\bindings\1.0.0\package.tgz
98 silly lockFile 7aca96e3-contextify-node-modules-bindings C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings
99 verbose lock C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings C:\Documents and Settings\michaelse\Application Data\npm-cache\7aca96e3-contextify-node-modules-bindings.lock
100 silly gunzTarPerm modes [ '777', '666' ]
101 silly gunzTarPerm extractEntry package.json
102 silly gunzTarPerm extractEntry README.md
103 silly gunzTarPerm extractEntry bindings.js
104 verbose read json C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings\package.json
105 silly lockFile 7aca96e3-contextify-node-modules-bindings C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings
106 info preinstall bindings@1.0.0
107 verbose from cache C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings\package.json
108 verbose readDependencies using package.json deps
109 verbose from cache C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings\package.json
110 verbose readDependencies using package.json deps
111 silly resolved []
112 verbose about to build C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings
113 info build C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings
114 verbose from cache C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\node_modules\bindings\package.json
115 verbose linkStuff [ true,
115 verbose linkStuff   'C:\\Documents and Settings\\michaelse\\Application Data\\npm\\node_modules',
115 verbose linkStuff   false,
115 verbose linkStuff   'C:\\Documents and Settings\\michaelse\\Application Data\\npm\\node_modules\\contextify\\node_modules' ]
116 info linkStuff bindings@1.0.0
117 verbose linkBins bindings@1.0.0
118 verbose linkMans bindings@1.0.0
119 verbose rebuildBundles bindings@1.0.0
120 info install bindings@1.0.0
121 info postinstall bindings@1.0.0
122 verbose about to build C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify
123 info build C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify
124 verbose from cache C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\package.json
125 verbose linkStuff [ true,
125 verbose linkStuff   'C:\\Documents and Settings\\michaelse\\Application Data\\npm\\node_modules',
125 verbose linkStuff   true,
125 verbose linkStuff   'C:\\Documents and Settings\\michaelse\\Application Data\\npm\\node_modules' ]
126 info linkStuff contextify@0.1.3
127 verbose linkBins contextify@0.1.3
128 verbose linkMans contextify@0.1.3
129 verbose rebuildBundles contextify@0.1.3
130 verbose rebuildBundles [ 'bindings' ]
131 info install contextify@0.1.3
132 verbose unsafe-perm in lifecycle true
133 silly exec cmd "/c" "node-gyp rebuild"
134 silly cmd,/c,node-gyp rebuild,C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify spawning
135 info contextify@0.1.3 Failed to exec install script
136 info C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify unbuild
137 verbose from cache C:\Documents and Settings\michaelse\Application Data\npm\node_modules\contextify\package.json
138 info preuninstall contextify@0.1.3
139 info uninstall contextify@0.1.3
140 verbose true,C:\Documents and Settings\michaelse\Application Data\npm\node_modules,C:\Documents and Settings\michaelse\Application Data\npm\node_modules unbuild contextify@0.1.3
141 info postuninstall contextify@0.1.3
142 error contextify@0.1.3 install: `node-gyp rebuild`
142 error `cmd "/c" "node-gyp rebuild"` failed with 1
143 error Failed at the contextify@0.1.3 install script.
143 error This is most likely a problem with the contextify package,
143 error not with npm itself.
143 error Tell the author that this fails on your system:
143 error     node-gyp rebuild
143 error You can get their info via:
143 error     npm owner ls contextify
143 error There is likely additional logging output above.
144 error System Windows_NT 5.1.2600
145 error command "C:\\Program Files\\nodejs\\\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "-g" "contextify"
146 error cwd C:\git_wa\Xodiac\hagrid
147 error node -v v0.8.8
148 error npm -v 1.1.59
149 error code ELIFECYCLE
150 verbose exit [ 1, true ]
